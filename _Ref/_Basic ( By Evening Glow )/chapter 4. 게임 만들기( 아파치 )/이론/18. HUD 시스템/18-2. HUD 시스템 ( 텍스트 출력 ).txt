========================================================
@	텍스트 출력.
========================================================

-------------------------------------
0.	개요
-------------------------------------
	
	-	HUD를 이용하여 게임 화면에 텍스트를 출력한다.



-------------------------------------
1.	HUD 블프 작성
-------------------------------------

	-	[ BP_MyHUD ] 이벤트 그래프에 노드 추가.

		-	HUD는 Receive Draw HUD 이벤트로 시작함.

			Receive Draw HUD 이벤트를 추가.

		-	화면에 글자를 표시하기 위해 DrawText 노드를 추가.


	-	주요 속성

		-	Receive Draw HUD

			-	Size X, Y

				-	게임 화면의 해상도를 구해줌.

				-	픽셀 단위.

		
		-	DrawText 노드.

			-	Text

				-	화면에 출력할 문자열.

				-	문자열은 자동으로 줄바꿈되지 않는다.

					-	여러행의 문장을 출력할 경우 DrawText 노드를 여러번 호출한다.
			
			-	Text Color

				-	출력할 문자열의 색상 설정.

			
			-	Screen X, Y

				-	문자를 출력할 좌표.

				-	단위는 픽셀.

				-	화면 좌상단이 ( 0, 0 ).

			
			-	Font

				-	프로젝트에 설치되어 있는 글꼴 지정.

				-	지정하지 않으면 기본 글꼴이 사용됨.


			-	Scale

				-	글자 크기 비율.

			
			-	Scale Position

				-	글자를 확대할 때 기준 좌표도 함께 확대하는지 여부 설정.

				-	이 옵션을 켜고 Scale 을 2로 설정하면 좌표 ( 10, 10 )은 두배 확대된 ( 20, 20 )이 될것.



-------------------------------------
2.	텍스트를 화면 중앙에 정렬.
-------------------------------------

	-	가로 방향의 중앙에 정렬.

		(1)	출력할 영역의 너비 정보 필요

			->	HUD를 통해 알수 있음.

		(2)	출력할 문자열의 길이 정보 필요.

			->	GetTextSize 함수로 구할수 있음.

		->	문자열 출력 위치	:	( (1) - (2) ) / 2




-------------------------------------
3.	함수 작성
-------------------------------------
	
	-	화면의 폭과 높이를 저장하는 변수를 추가.

		-	[ BP_MyHUD / ScreenWidth ], [ BP_MyHUD / ScreenHeight ] 참고.

			입력 파라미터	|	타입	|	비고
			------------------------------------------
			ScreenWidth		|	float	|	화면 폭
			ScreenHeight	|	float	|	화면 높이



	-	화면의 사이즈를 저장하는 함수 작성.

		-	[ BP_MyHUD / SetScreenSize ] 참고.
			
			입력 파라미터	|	타입	|	비고
			------------------------------------------
			Width			|	int		|	화면 폭
			Height			|	int		|	화면 높이.


	-	화면의 중앙 위치 계산 함수 작성.

		-	[ BP_MyHUD / GetCenterPos ] 노드 참고.

			입력 파라미터	|	타입	|	비고
			------------------------------------------
			Width			|	float	|	글자 폭


			출력 파라미터	|	타입	|	비고
			------------------------------------------
			Return Value	|	float	|	화면 가운데 위치

		
		-	일반적인 수학식은 연산자 우선 법칙이 적용되지만

			블프의 수식은 연산자 우선 법칙이 적용되지않고
			
			왼쪽에서 오른쪽으로 계산해나가는 방식으로

			왼쪽에 있는 연산자의 우선순위가 더 높다.
			


	-	텍스트 출력 함수 작성.

		-	[ BP_MyHUD / DrawTextCenter ] 노드 참고.

			-
				입력 파라미터	|	타입						|	비고
				------------------------------------------------------------------------
				Text			|	string						|	출력할 문자열
				Color			|	LinearColor					|	문자열 색상.
				ScreenY			|	float						|	출력할 세로 좌표.
				Font			|	오브젝트 레퍼런스 / Font	|	글꼴
				Scale			|	float						|	스케일 비율.

				


-------------------------------------
4.	글꼴 추가.
-------------------------------------

	-	한글 글꼴 추가에 관한 사항은

		[chapter 4. 블루 프린트 / 11. 화면에 Text 표시.txt / 글꼴 만들기 ]를 참고.

	-	간단한 글꼴 추가.

		1.	[ 콘텐츠 브라우저 / 신규 추가 / 고급 애셋 생성 / 유저 인터페이스 / 폰트 ] 생성.

		2.	이름은 MyFont로 설정.

		3.	더블 클릭하여 폰트 에디터 열기.

		4.	Font Cache Type 속성을 [ Offline ]으로 설정.
		
		5.	글꼴 설정 후 [ Draw Text Center / Font ]를 MyFont 로 설정.

		

